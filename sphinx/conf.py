#
# Operational Analysis documentation build configuration file, created by
# sphinx-quickstart on Fri Dec  8 11:30:30 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import io
import os
import re
import sys
from pathlib import Path


sys.path.insert(0, os.path.abspath(".."))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.coverage",
    "sphinx.ext.mathjax",
    "sphinx.ext.ifconfig",
    "sphinx.ext.viewcode",
    "sphinx.ext.napoleon",
    "sphinx.ext.todo",
    "sphinx_design",
    "sphinxcontrib.bibtex",
    "bokeh.sphinxext.bokeh_plot",
    "myst_nb",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
source_suffix = {
    ".rst": "restructuredtext",
    ".txt": "markdown",
    ".md": "myst-nb",
    ".ipynb": "myst-nb",
    ".myst": "myst-nb",
}

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "OpenOA"
copyright = "2023, NREL"
author = "NREL PRUF OA Team"


# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# Read the version from the __init__.py file without importing it
def read(*names, **kwargs):
    with open(
        os.path.join(os.path.dirname(__file__)[:-7], *names),
        encoding=kwargs.get("encoding", "utf8"),
    ) as fp:
        return fp.read()


def find_version(*file_paths):
    version_file = read(*file_paths)
    version_match = re.search(r"^__version__ = ['\"]([^'\"]*)['\"]", version_file, re.M)
    if version_match:
        return version_match.group(1)
    raise RuntimeError("Unable to find version string.")


# The short X.Y version.
version = find_version("openoa", "__init__.py")
# The full version, including alpha/beta/rc tags.
release = find_version("openoa", "__init__.py")

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "pydata_sphinx_theme"
html_static_path = ["_static"]
html_css_files = [
    "css/custom.css",
]
# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    "github_url": "https://github.com/NREL/OpenOA",
    "navbar_start": ["navbar-logo"],
    "show_toc_level": 3,
    "show_nav_level": 2,
    "navigation_depth": 2,
    "collapse_navigation": True,
    "navbar_align": "left",
    "logo": {
        "image_light": str(
            Path(__file__).resolve().parents[1]
            / "Open OA Final Logos/Color/Open OA Color Transparent Background.png"
        ),
        "image_dark": str(
            Path(__file__).resolve().parents[1]
            / "Open OA Final Logos/Color/Open OA Color Transparent Background.png"
        ),
    },
}

html_context = {
    "default_mode": "light",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ["_static"]

bibtex_bibfiles = ["refs.bib"]

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
# htmlhelp_basename = "OpenOAdoc"


# -- Options for autodoc --------------------------------------------------

# autodoc_typehints = "both"
autodoc_default_options = {
    "autoclass_content": "class",
    "member-order": "bysource",
    "members": True,
}


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        "OperationalAnalysis.tex",
        "Operational Analysis Documentation",
        "NREL PRUF OA Team",
        "manual",
    ),
]

# -- Options for Myst -----------------------------------------------------

# Syntax descriptions and examples: https://myst-parser.readthedocs.io/en/latest/syntax/optional.html#syntax-extensions
myst_enable_extensions = [
    "amsmath",
    # "attrs_inline",
    "colon_fence",
    "deflist",
    "dollarmath",
    "fieldlist",
    # "html_admonition",
    # "html_image",
    # "linkify",
    # "replacements",
    # "smartquotes",
    # "strikethrough",
    # "substitution",
    "tasklist",
]

# toggle this between auto/off to rerun full documentation build
nb_execution_mode = "auto"  # Should be coming from the examples folder
nb_execution_excludepatterns = ["examples/*"]

myst_heading_anchors = 3

# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "operationalanalysis", "Operational Analysis Documentation", [author], 1)]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "OperationalAnalysis",
        "Operational Analysis Documentation",
        author,
        "OperationalAnalysis",
        "One line description of project.",
        "Miscellaneous",
    ),
]

# -- Options for Napolean
napoleon_google_docstring = True
napoleon_use_param = False
napoleon_use_ivar = False
autoclass_content = "both"

# -- Options for Autodoc
# TODO: MAKE SURE THIS STAYS IN LINE WITH setup.py

autodoc_mock_imports = [
    "statsmodels",
    "scikit-learn>=1.0",
    "requests>=2.21.0",
    "eia-python>=1.22",
    "pyproj>=3.5",
    "shapely>=1.8",
    "numpy>=1.24",
    "pandas>=2.0",
    "pygam>=0.9.0",
    "scipy>=1.7",
    "statsmodels>=0.11",
    "tqdm>=4.28.1",
    "matplotlib>=3.6",
    "bokeh>=2.4",
    "attrs>=22",
    "pytz",
    "pyyaml",
    "h5pyd",
    "pyspark",
]
